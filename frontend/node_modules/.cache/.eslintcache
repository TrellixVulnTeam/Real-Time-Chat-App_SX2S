[{"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/index.js":"1","/home/bzeeno/Code/Go/RealTimeChat/frontend/src/reportWebVitals.js":"2","/home/bzeeno/Code/Go/RealTimeChat/frontend/src/App.js":"3","/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Navbar.js":"4","/home/bzeeno/Code/Go/RealTimeChat/frontend/src/pages/Login.js":"5","/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Button.js":"6","/home/bzeeno/Code/Go/RealTimeChat/frontend/src/pages/Home.js":"7","/home/bzeeno/Code/Go/RealTimeChat/frontend/src/pages/Register.js":"8","/home/bzeeno/Code/Go/RealTimeChat/frontend/src/pages/Friend.js":"9","/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Message.js":"10","/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/MessageBox.js":"11","/home/bzeeno/Code/Go/RealTimeChat/frontend/src/pages/Room.js":"12","/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/SidebarData.js":"13","/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Preview.js":"14","/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Search.js":"15","/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/CreateRoom.js":"16"},{"size":500,"mtime":1630696633547,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1630696633547,"results":"19","hashOfConfig":"18"},{"size":2139,"mtime":1631763978527,"results":"20","hashOfConfig":"18"},{"size":2126,"mtime":1631763976553,"results":"21","hashOfConfig":"18"},{"size":2236,"mtime":1631340677657,"results":"22","hashOfConfig":"18"},{"size":738,"mtime":1631410405851,"results":"23","hashOfConfig":"18"},{"size":5076,"mtime":1631953518867,"results":"24","hashOfConfig":"18"},{"size":2854,"mtime":1631396248410,"results":"25","hashOfConfig":"18"},{"size":3364,"mtime":1631953517947,"results":"26","hashOfConfig":"18"},{"size":401,"mtime":1631736241537,"results":"27","hashOfConfig":"18"},{"size":868,"mtime":1631953517113,"results":"28","hashOfConfig":"18"},{"size":3182,"mtime":1631824489316,"results":"29","hashOfConfig":"18"},{"size":230,"mtime":1631251758178,"results":"30","hashOfConfig":"18"},{"size":9690,"mtime":1631953515483,"results":"31","hashOfConfig":"18"},{"size":2255,"mtime":1631570049880,"results":"32","hashOfConfig":"18"},{"size":1631,"mtime":1631763972510,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"u3jw5y",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/index.js",[],["70","71"],"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/reportWebVitals.js",[],"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/App.js",[],"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Navbar.js",["72"],"import React, {useState} from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport {Preview} from './Preview'\nimport './Navbar.scss'\n\nexport const Navbar = (props) => {\n    const [sidebar, setSidebar] = useState(false)\n    const history = useHistory()\n\n    const showSidebar = () => setSidebar(!sidebar) // toggle sidebar\n\n    // logout function\n    const logout = async () => {\n        props.setUser('')\n\n        await fetch(\"http://localhost:8000/api/logout\", { // send post request to logout endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n        })\n        localStorage.removeItem(\"user\")\n        history.push('/login')\n    }\n\n    let menu;\n    // if no user: don't display menu\n    if (props.user === '') {\n        menu = (<></>)\n    } else {\n        menu = (\n        <>\n        <div className='navbar'>\n            <div className='container-fluid navbar-container'/>\n            <div className='nav-bars'>\n                <i className=\"fas fa-bars fa-3x\" onClick={showSidebar}/>\n            </div>\n            <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n                <ul className='nav-menu-items' onClick={showSidebar}>\n                    <li className='nav-toggle'>\n                        <div className='nav-x'>\n                            <i className=\"fas fa-times fa-3x\"/>\n                        </div>\n                    </li>\n                    <li className='nav-text'>\n                        <Link to='/'>\n                            <i className=\"fas fa-atom\" />\n                            <span> Home</span>\n                        </Link>\n                    </li>\n                    <li className='nav-text'>\n                        <Link to='/login' onClick={logout}>\n                            <i className=\"fas fa-power-off\" />\n                            <span> Logout</span>\n                        </Link>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n        </>\n        )\n    }\n\n    return (\n        <>\n        {menu}\n        </>\n    )\n}\n","/home/bzeeno/Code/Go/RealTimeChat/frontend/src/pages/Login.js",[],"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Button.js",[],"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/pages/Home.js",[],"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/pages/Register.js",[],"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/pages/Friend.js",[],"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Message.js",[],"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/MessageBox.js",[],"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/pages/Room.js",["73"],"import React, {useEffect, useState, useRef} from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {Preview} from '../components/Preview'\nimport {Message} from '../components/Message'\nimport {MessageBox} from '../components/MessageBox'\nimport './RoomFriend.scss'\n\nexport const Room = (props) => {\n    const history = useHistory()\n    const [msg, setMsg] = useState()\n    const [messages, setMessages] = useState('')\n    const [users, setUsers] = useState([])\n    const socket = useRef(null);\n    // get room id\n    let router_data = useParams()\n    let room_id = router_data['room_id']\n\n    if (!localStorage.getItem(\"user\")) {\n        history.push('/login')\n    }\n\n    useEffect(() => {\n        const getRoomInfo = async () => {\n            const response = await fetch(\"http://localhost:8000/api/get-room-info\", { // send post request to logout endpoint\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    room_id: room_id\n                })\n            })\n            const result = await response.json()\n            console.log(result['users'])\n            setUsers(result['users'])\n        }\n        getRoomInfo()\n\n        const getMessages = async() => {\n            const response = await fetch(\"http://localhost:8000/api/get-messages\", {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    room_id: room_id\n                })\n            })\n\n            const result = await response.json()\n            setMessages(result['messages']) \n        }\n\n        getMessages()\n\n        socket.current = new WebSocket(\"ws://localhost:8000/ws/\"+room_id)\n\n        socket.current.onopen = (event) => {\n            console.log(\"Connection at: \", \"ws://localhost:8000/ws/\"+room_id)\n        }\n        socket.current.onmessage = (msg) => {\n            let new_msg = JSON.parse(msg.data)\n            console.log(new_msg)\n            setMessages(prev => [...prev, new_msg])\n        }\n        socket.current.onclose = (event) => {\n            console.log(\"socket closed connection: \", event)\n        }\n        \n        return () => socket.current.close()\n    }, [room_id])\n\n\n    const sendMsg = () => {\n        socket.current.send(msg)\n    }\n\n    return (\n        <div className='container room-friend-container'>\n            <div className='row mt-5'>\n                <Preview alt='room' size='img-large' isRoom={true} room_id={room_id} />\n            </div>\n            <div className='row'>\n                {messages.length === 0 ? null : Object.keys(messages).map(key => \n                    <div key={key} className=''>\n                        <Message user={messages[key]['user']} text={messages[key]['text']} isCurrUser={props.user['username'] === messages[key]['user']} />\n                    </div>\n                )}\n            </div>\n\n            <div className='row'>\n                <MessageBox onChange={setMsg} onClick={sendMsg}/>\n            </div>\n        </div>\n    )\n}\n","/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/SidebarData.js",[],["74","75"],"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Preview.js",["76"],"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Search.js",[],"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/CreateRoom.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":3,"column":9,"nodeType":"83","messageId":"84","endLine":3,"endColumn":16},{"ruleId":"81","severity":1,"message":"85","line":12,"column":12,"nodeType":"83","messageId":"84","endLine":12,"endColumn":17},{"ruleId":"77","replacedBy":"86"},{"ruleId":"79","replacedBy":"87"},{"ruleId":"81","severity":1,"message":"88","line":123,"column":15,"nodeType":"83","messageId":"84","endLine":123,"endColumn":21},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'Preview' is defined but never used.","Identifier","unusedVar","'users' is assigned a value but never used.",["89"],["90"],"'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]